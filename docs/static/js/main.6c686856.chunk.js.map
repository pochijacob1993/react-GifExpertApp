{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFectchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"2LAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAIL,GAAJ,mBAAkBK,SAQjC,2BACIC,KAAK,OACLC,MAAQP,EACRQ,SAhBc,SAAEL,GACxBF,EAAeE,EAAEM,OAAOF,Y,uBCJnBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACyCC,UAAWH,GADpD,+DAEKI,MAAOF,GAFZ,cAERG,EAFQ,gBAGSA,EAAKC,OAHd,uBAGNC,EAHM,EAGNA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR5B,kBAWZM,GAXY,4CAAF,sDCDPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,KCFLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EACbZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiB3C,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IACEqB,EDb8BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAErB,OACI,oCAEA,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAGb,yBAAKA,UAAU,QAGHH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACAiB,IAAMjB,EAAIC,IACLD,UEKdkB,EAxBM,WAAO,IAAD,EACWxC,mBAAS,CAC3C,gBAFuB,mBAClByC,EADkB,KACN1C,EADM,KAOzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACE,4BAEM0C,EAAWpB,KAAK,SAAET,GAAF,OAChB,kBAAC,EAAD,CACA2B,IAAM3B,EACNA,SAAWA,U,MCfzB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c686856.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        setCategories( cats =>[InputValue,...cats ] );\r\n          \r\n\r\n    \r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ InputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs= async( category ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=vXXm99VmzmMITiJ0X0SB9kYhzDwntxm2`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json()\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n            }\r\n        })\r\n   return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFectchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <>\r\n        \r\n        <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n\r\n        <div className=\"card\">\r\n        \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        />\r\n\r\n                    )\r\n    )}\r\n                \r\n    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs= ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true     \r\n    })\r\nuseEffect( () => {\r\n    getGifs( category )\r\n        .then( imgs => {\r\n            \r\n            setstate({\r\n                data: imgs,\r\n                loading: false \r\n          \r\n\r\n            })\r\n        })\r\n}, [ category ])\r\nreturn state;    \r\n};","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nconst GifExpertApp = () => {\r\n  const [Categories, setCategories] = useState([\r\n    'Dragon Ball',]);\r\n    // const handleAdd = () => {\r\n    // setCategories([...categories, \"One Piece\"]);\r\n    // console.log(categories);\r\n  //  };\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n        <ol>\r\n          {\r\n              Categories.map( ( category ) => (\r\n              <GifGrid \r\n              key={ category }\r\n              category={ category } />\r\n        ))\r\n        }\r\n       </ol>\r\n    </>\r\n  );\r\n};\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}